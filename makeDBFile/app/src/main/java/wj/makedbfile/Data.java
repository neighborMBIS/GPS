package wj.makedbfile;

/**
 * Created by user on 2016-09-01.
 */
public class Data {
    public static byte[] writeData;
    public static byte[] readData;
//            //지점정보
//            = new byte[] {
//            0x01, 0x72, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x00, 0x00, 0x00, (byte) 0xE5
//
//            //일자, 시각
//            , 0x31, 0x36, 0x31, 0x30, 0x32, 0x30, 0x31, 0x32, 0x30, 0x30, 0x30, 0x30
//            //개정번호, 지점 수
//            , 0x00, 0x01, 0x00, 0x06
//            //일자, 시각
//            , 0x31, 0x36, 0x31, 0x30, 0x32, 0x35, 0x31, 0x35, 0x30, 0x30, 0x30, 0x30
//
//            /****반복****/
//            //지점ID
//            , 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x39, (byte) 0x8C, (byte) 0xD9
//            //지점 명칭
//            , 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
//            , 0x00, 0x00, 0x00, (byte) 0xc1, (byte) 0xf6, (byte) 0xc1, (byte) 0xa1, (byte) 0xc1, (byte) 0xf6, (byte) 0xc1
//            , (byte) 0xa1, (byte) 0xc1, (byte) 0xf6, (byte) 0xc1, (byte) 0xa1, (byte) 0xc1, (byte) 0xf6, (byte) 0xc1, (byte) 0xa1, 0x30
//            //지점 유형
//            , 0x00, 0x01
//            //지점 각도
//            , 0x00, 0x00
//            //지점 좌표
//            , 0x00, 0x39, 0x36, 0x73,   0x00, (byte) 0xC1, (byte) 0xF9, 0x7F
//            //지점 도착, 출발 판단 거리
//            , 0x00, 0x1E, 0x00, 0x1E
//
//            /****반복****/
//            //지점ID
//            , 0x00, 0x00, 0x00, 0x00, 0x0D, (byte) 0xD8, (byte) 0xF8, (byte) 0xA0
//            //지점 명칭
//            , 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
//            , 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
//            , 0x00, 0x00, 0x00, 0x00, 0x00, (byte) 0xc1, (byte) 0xf6, (byte) 0xc1, (byte) 0xa1, 0x31
//            //지점 유형
//            , 0x00, 0x01
//            //지점 각도
//            , 0x00, 0x00
//            //지점 좌표
//            , 0x00, 0x39, 0x36, 0x31,   0x00, (byte) 0xC1, (byte) 0xF9, 0x0B
//            //지점 도착, 출발 판단 거리
//            , 0x00, 0x1E, 0x00, 0x1E
//
//            /****반복****/
//            //지점ID
//            , 0x00, 0x00, 0x00, 0x00, 0x14, 0x78, 0x64, 0x67
//            //지점 명칭
//            , 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
//            , 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
//            , 0x00, 0x00, 0x00, 0x00, 0x00, (byte) 0xc1, (byte) 0xf6, (byte) 0xc1, (byte) 0xa1, 0x32
//            //지점 유형
//            , 0x00, 0x02
//            //지점 각도
//            , 0x00, 0x00
//            //지점 좌표
//            , 0x00, 0x39, 0x36, 0x09,   0x00, (byte) 0xC1, (byte) 0xF8, (byte) 0xB2
//            //지점 도착, 출발 판단 거리
//            , 0x00, 0x1E, 0x00, 0x1E
//
//            /****반복****/
//            //지점ID
//            , 0x00, 0x00, 0x00, 0x00, 0x1B, 0x17, (byte) 0xD0, 0x2E
//            //지점 명칭
//            , 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
//            , 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
//            , 0x00, 0x00, 0x00, 0x00, 0x00, (byte) 0xc1, (byte) 0xf6, (byte) 0xc1, (byte) 0xa1, 0x33
//            //지점 유형
//            , 0x00, 0x01
//            //지점 각도
//            , 0x00, 0x00
//            //지점 좌표
//            , 0x00, 0x39, 0x35, (byte) 0xDD,   0x00, (byte) 0xC1, (byte) 0xF8, (byte) 0x6E
//            //지점 도착, 출발 판단 거리
//            , 0x00, 0x1E, 0x00, 0x1E
//
//            /****반복****/
//            //지점ID
//            , 0x00, 0x00, 0x00, 0x00, 0x21, (byte) 0xB7, (byte) 0x3B, (byte) 0xF5
//            //지점 명칭
//            , 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
//            , 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
//            , 0x00, 0x00, 0x00, 0x00, 0x00, (byte) 0xc1, (byte) 0xf6, (byte) 0xc1, (byte) 0xa1, 0x34
//            //지점 유형
//            , 0x00, 0x01
//            //지점 각도
//            , 0x00, 0x00
//            //지점 좌표
//            , 0x00, 0x39, 0x35, (byte) 0xB7,   0x00, (byte) 0xC1, (byte) 0xF8, (byte) 0x1F
//            //지점 도착, 출발 판단 거리
//            , 0x00, 0x1E, 0x00, 0x1E
//
//            /****반복****/
//            //지점ID
//            , 0x00, 0x00, 0x00, 0x00, 0x28, (byte) 0x56, (byte) 0xA7, (byte) 0xBC
//            //지점 명칭
//            , 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
//            , 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
//            , 0x00, 0x00, 0x00, 0x00, 0x00, (byte) 0xc1, (byte) 0xf6, (byte) 0xc1, (byte) 0xa1, 0x35
//            //지점 유형
//            , 0x00, 0x01
//            //지점 각도
//            , 0x00, 0x00
//            //지점 좌표
//            , 0x00, 0x39, 0x36, (byte) 0x00,   0x00, (byte) 0xC1, (byte) 0xF7, (byte) 0xE0
//            //지점 도착, 출발 판단 거리
//            , 0x00, 0x1E, 0x00, 0x1E
//
//            //예약
//            , 0x00, 0x00, 0x00, 0x00
//    };










//            //노선정보
//            = new byte[] {
//            0x01, 0x72, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x00, 0x00, 0x00, (byte) 0xE5
//
//            , 0x31, 0x36, 0x31, 0x30, 0x32, 0x30, 0x31, 0x32, 0x30, 0x30, 0x30, 0x30
//
//            , 0x00, 0x01, 0x02
//
//            , 0x31, 0x36, 0x31, 0x30, 0x32, 0x35, 0x31, 0x35, 0x30, 0x30, 0x30, 0x30
//
//            //노선정보
//            , 0x00, 0x00, 0x00, 0x00, 0x00, (byte) 0xab, (byte) 0xcd, (byte) 0xef
//            , 0x31, 0x32, 0x33, 0x34, 0x35,     0x36, 0x37,     0x31,       0x30, 0x30
//            //노선유형
//            , 0x00
//            //첫,막차시간
//            , 0x01, (byte) 0xA4, 0x04, (byte) 0xCE
//            //배차간격, 소요시간, 노선길이, 정류소 수
//            , 0x01, 0x01, 0x02, 0x02, (byte) 0x0a, (byte) 0xf0, 0x06
//            //기점정류소 명칭
//            , 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
//            , 0x00, 0x00, 0x00, (byte) 0xc1, (byte) 0xf6, (byte) 0xc1, (byte) 0xa1, (byte) 0xc1, (byte) 0xf6, (byte) 0xc1
//            , (byte) 0xa1, (byte) 0xc1, (byte) 0xf6, (byte) 0xc1, (byte) 0xa1, (byte) 0xc1, (byte) 0xf6, (byte) 0xc1, (byte) 0xa1, 0x30
//
//            , 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
//            , 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
//            , 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
//
//            , 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
//            , 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
//            , 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
//
//            , 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
//            , 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
//            , 0x00, 0x00, 0x00, 0x00, 0x00, (byte) 0xc1, (byte) 0xf6, (byte) 0xc1, (byte) 0xa1, 0x35
//
//    };






//            //RouteStation
//            = new byte[] {
//            0x01, 0x73, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x00, 0x00, 0x00, 0x86
//
//            , 0x31, 0x36, 0x31, 0x30, 0x32, 0x30, 0x31, 0x32, 0x30, 0x30, 0x30, 0x30
//
//            , 0x00, 0x01
//
//            , 0x00, 0x00, 0x00, 0x00, 0x00, (byte) 0xab, (byte) 0xcd, (byte) 0xef
//            , 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37 , 0x31 , 0x30, 0x30
//
//            , 0x00, 0x06
//
//            , 0x31, 0x36, 0x31, 0x30, 0x32, 0x30, 0x31, 0x33, 0x30, 0x30, 0x30, 0x30
//
//            , 0x00, 0x01 , 0x0b, 0x0b, 0x0b, 0x0b, 0x0b , 0x00, 0x01 , 0x00, 0x01
//            , 0x00, 0x02 , 0x16, 0x16, 0x16, 0x16, 0x16 , 0x00, 0x02 , 0x00, 0x02
//            , 0x00, 0x03 , 0x21, 0x21, 0x21, 0x21, 0x21 , 0x00, 0x03 , 0x00, 0x03
//            , 0x00, 0x04 , 0x2c, 0x2c, 0x2c, 0x2c, 0x2c , 0x00, 0x04 , 0x00, 0x04
//            , 0x00, 0x05 , 0x37, 0x37, 0x37, 0x37, 0x37 , 0x00, 0x05 , 0x00, 0x05
//            , 0x00, 0x06 , 0x63, 0x63, 0x63, 0x63, 0x63 , 0x00, 0x06 , 0x00, 0x06
//
//            , 0x00, 0x00, 0x00, 0x00
//
//    };
}
